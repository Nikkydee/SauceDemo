{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-10T06:08:57.766Z",
    "end": "2025-06-10T06:09:03.144Z",
    "duration": 5378,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f6512733-bd91-4fb9-903d-772adfb67021",
      "title": "",
      "fullFile": "cypress/e2e/LoginTest.cy.js",
      "file": "cypress/e2e/LoginTest.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
          "title": "Test login scenarios",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify that the  user cannot log in successfully with invalid username and valid password",
              "fullTitle": "Test login scenarios Verify that the  user cannot log in successfully with invalid username and valid password",
              "timedOut": null,
              "duration": 1334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterUsername(this.loginData.userData.invalidUsername);\n_LoginPage.default.enterPassword(this.loginData.userData.invalidPassword);\n_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Username and password do not match any user in this service');\n});\n_LoginPage.default.closeError();",
              "err": {},
              "uuid": "3a90b151-13bd-45f6-b4f3-a918a1a1fb80",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user cannot log in successfully with valid username and invalid password",
              "fullTitle": "Test login scenarios Verify that the user cannot log in successfully with valid username and invalid password",
              "timedOut": null,
              "duration": 784,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterUsername(this.loginData.userData.validUsername);\n_LoginPage.default.enterPassword(this.loginData.userData.invalidPassword);\n_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Username and password do not match any user in this service');\n});",
              "err": {},
              "uuid": "18cab587-9904-4f87-a07e-195293043e4b",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user cannot  log in successfully with invalid username and invalid password",
              "fullTitle": "Test login scenarios Verify that the user cannot  log in successfully with invalid username and invalid password",
              "timedOut": null,
              "duration": 1104,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterUsername(this.loginData.userData.invalidUsername);\n_LoginPage.default.enterPassword(this.loginData.userData.invalidPassword);\n_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Username and password do not match any user in this service');\n});",
              "err": {},
              "uuid": "42fd3246-8616-4841-a12f-be9c9fa1e5a3",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user cannot log in successfully with blank username and valid password",
              "fullTitle": "Test login scenarios Verify that the user cannot log in successfully with blank username and valid password",
              "timedOut": null,
              "duration": 507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterPassword(this.loginData.userData.validPassword);\n_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Username is required');\n});",
              "err": {},
              "uuid": "b01901b9-acb7-4ed2-8bed-6f79305bb533",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user cannot log in successfully with valid username and blank password",
              "fullTitle": "Test login scenarios Verify that the user cannot log in successfully with valid username and blank password",
              "timedOut": null,
              "duration": 502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterUsername(this.loginData.userData.validUsername);\n_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Password is required');\n});",
              "err": {},
              "uuid": "af820e29-ae4a-42cd-9397-1566755b1d9d",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user cannot log in successfully with blank username and blank password",
              "fullTitle": "Test login scenarios Verify that the user cannot log in successfully with blank username and blank password",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.clickLoginButton();\nexpect(_LoginPage.default.elements.errorMsg().should('be.visible'));\n_LoginPage.default.elements.errorMsg().invoke('text').then(text => {\n  expect(text).to.include('Username is required');\n});",
              "err": {},
              "uuid": "b635b079-d44b-46eb-995f-e46b077733f5",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that the user can log in successfully with valid username and valid password",
              "fullTitle": "Test login scenarios Verify that the user can log in successfully with valid username and valid password",
              "timedOut": null,
              "duration": 787,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_LoginPage.default.enterUsername(this.loginData.userData.validUsername);\n_LoginPage.default.enterPassword(this.loginData.userData.validPassword);\n_LoginPage.default.clickLoginButton();\nexpect(_HomePage.default.elements.appLogo().should('be.visible'));\n_HomePage.default.elements.appLogo().invoke('text').then(text => {\n  expect(text).to.include('Swag Labs');\n});",
              "err": {},
              "uuid": "46f27f4d-96ae-41b3-acae-3d228b82b2bb",
              "parentUUID": "2b5e552c-118f-4ad0-af51-5cf82da3e204",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a90b151-13bd-45f6-b4f3-a918a1a1fb80",
            "18cab587-9904-4f87-a07e-195293043e4b",
            "42fd3246-8616-4841-a12f-be9c9fa1e5a3",
            "b01901b9-acb7-4ed2-8bed-6f79305bb533",
            "af820e29-ae4a-42cd-9397-1566755b1d9d",
            "b635b079-d44b-46eb-995f-e46b077733f5",
            "46f27f4d-96ae-41b3-acae-3d228b82b2bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5256,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}